Input:
------
c = 2
def foo(a, b): 
  return a + b + c
foo(1,2)


Output:
-------
Module[1:0-4:8]
    Assign[1:0-1:5]
        LHS: Name[1:0-1:1] Value: "c" Store
        RHS: LONG[1:4-1:5] Value: 2
    FunctionDef[2:0-3:18]
        Name:foo
        ArgumentsTy[1:0-1:0]
            Args:
                ArgTy[2:8-2:9] a
                ArgTy[2:11-2:12] b
        ---- Function body of foo ----
        Return[3:2-3:18] 
            BinOp[3:9-3:18]
                Op: Add
                LHS: 
                    BinOp[3:9-3:14]
                        Op: Add
                        LHS: Name[3:9-3:10] Value: "a"
                        RHS: Name[3:13-3:14] Value: "b"
                RHS: Name[3:17-3:18] Value: "c"
        ---- End of foo function ----
    Call[4:0-4:8]
        Target: Name[4:0-4:3] Value: "foo"
        Args:
            LONG[4:4-4:5] Value: 1
            LONG[4:6-4:7] Value: 2