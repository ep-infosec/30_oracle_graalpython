Input:
------
class OrderedDict(dict):
    def __reversed__(self):
        root = self.__root
        curr = root.prev
        while curr is not root:
            yield curr.key
            curr = curr.prev

Output:
-------
Module[1:0-7:28]
    ClassDef[1:0-7:28] OrderedDict
        Bases:
            Name[1:18-1:22] Value: "dict"
        ---- Class body of OrderedDict ----
        FunctionDef[2:4-7:28]
            Name:__reversed__
            ArgumentsTy[1:0-1:0]
                Args:
                    ArgTy[2:21-2:25] self
            ---- Function body of __reversed__ ----
            Assign[3:8-3:26]
                LHS: Name[3:8-3:12] Value: "root" Store
                RHS: 
                    Attribute[3:15-3:26] 
                        Receiver: Name[3:15-3:19] Value: "self"
                        Attr: __root
            Assign[4:8-4:24]
                LHS: Name[4:8-4:12] Value: "curr" Store
                RHS: 
                    Attribute[4:15-4:24] 
                        Receiver: Name[4:15-4:19] Value: "root"
                        Attr: prev
            While[5:8-7:28]
                Condition: 
                    Compare[5:14-5:30]
                        LHS: Name[5:14-5:18] Value: "curr"
                        Op: IsNot
                        RHS: Name[5:26-5:30] Value: "root"
                Body:
                    Yield[6:12-6:26]
                        Attribute[6:18-6:26] 
                            Receiver: Name[6:18-6:22] Value: "curr"
                            Attr: key
                    Assign[7:12-7:28]
                        LHS: Name[7:12-7:16] Value: "curr" Store
                        RHS: 
                            Attribute[7:19-7:28] 
                                Receiver: Name[7:19-7:23] Value: "curr"
                                Attr: prev
            ---- End of __reversed__ function ----
        ---- End of OrderedDict class ----