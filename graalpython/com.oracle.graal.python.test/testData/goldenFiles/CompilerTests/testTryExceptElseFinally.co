Disassembly of <module>:
  1:0   -   1:5         0 LOAD_NAME                         0    (print)
  1:6   -   1:14        2 LOAD_STRING                       0    ('before')
  1:0   -   1:15        4 CALL_FUNCTION                     1
  1:0   -   1:15        6 POP_TOP
  2:0   -  11:18        7 NOP
  3:2   -   3:7         8 LOAD_NAME                         0    (print)
  3:8   -   3:13       10 LOAD_STRING                       1    ('try')
  3:2   -   3:14       12 CALL_FUNCTION                     1
  3:2   -   3:14       14 POP_TOP
  3:2   -   3:14       15 JUMP_FORWARD                      73   (to 88)
  3:2   -   3:14       17 PUSH_EXC_INFO                                                           (exc handler 8 - 17; stack: 0)
  4:7   -   4:16       18 LOAD_NAME                         1    (TypeError)
  4:0   -   5:18       20 MATCH_EXC_OR_JUMP                 31   (to 51)
  4:0   -   5:18       24 UNWRAP_EXC
  4:0   -   5:18       25 STORE_NAME                        2    (e)
  5:2   -   5:7        27 LOAD_NAME                         0    (print)
  5:8   -   5:17       29 LOAD_STRING                       2    ('except1')
  5:2   -   5:18       31 CALL_FUNCTION                     1
  5:2   -   5:18       33 POP_TOP
  5:2   -   5:18       34 LOAD_NONE
  5:2   -   5:18       35 STORE_NAME                        2    (e)
  5:2   -   5:18       37 DELETE_NAME                       2    (e)
  5:2   -   5:18       39 POP_EXCEPT
  5:2   -   5:18       40 JUMP_FORWARD                      66   (to 106)
  5:2   -   5:18       42 LOAD_NONE                                                               (exc handler 27 - 34; stack: 1)
  5:2   -   5:18       43 STORE_NAME                        2    (e)
  5:2   -   5:18       45 DELETE_NAME                       2    (e)
  5:2   -   5:18       47 ROT_TWO
  5:2   -   5:18       48 POP_EXCEPT
  5:2   -   5:18       49 JUMP_FORWARD                      48   (to 97)
  6:7   -   6:17  >>   51 LOAD_NAME                         3    (ValueError)
  6:0   -   7:18       53 MATCH_EXC_OR_JUMP                 45   (to 98)
  6:0   -   7:18       57 UNWRAP_EXC
  6:0   -   7:18       58 STORE_NAME                        2    (e)
  7:2   -   7:7        60 LOAD_NAME                         0    (print)
  7:8   -   7:17       62 LOAD_STRING                       3    ('except2')
  7:2   -   7:18       64 CALL_FUNCTION                     1
  7:2   -   7:18       66 POP_TOP
  7:2   -   7:18       67 LOAD_NONE
  7:2   -   7:18       68 STORE_NAME                        2    (e)
  7:2   -   7:18       70 DELETE_NAME                       2    (e)
  7:2   -   7:18       72 POP_EXCEPT
  7:2   -   7:18       73 JUMP_FORWARD                      33   (to 106)
  7:2   -   7:18       75 LOAD_NONE                                                               (exc handler 60 - 67; stack: 1)
  7:2   -   7:18       76 STORE_NAME                        2    (e)
  7:2   -   7:18       78 DELETE_NAME                       2    (e)
  7:2   -   7:18       80 ROT_TWO
  7:2   -   7:18       81 POP_EXCEPT
  7:2   -   7:18       82 JUMP_FORWARD                      15   (to 97)
  7:2   -   7:18       84 ROT_TWO                                                                 (exc handler 18 - 27; stack: 1 | exc handler 34 - 60; stack: 1 | exc handler 67 - 84; stack: 1)
  7:2   -   7:18       85 POP_EXCEPT
  7:2   -   7:18       86 JUMP_FORWARD                      11   (to 97)
  9:2   -   9:7   >>   88 LOAD_NAME                         0    (print)
  9:8   -   9:14       90 LOAD_STRING                       4    ('else')
  9:2   -   9:15       92 CALL_FUNCTION                     1
  9:2   -   9:15       94 POP_TOP
  9:2   -   9:15       95 JUMP_FORWARD                      11   (to 106)
  9:2   -   9:15  >>   97 PUSH_EXC_INFO                                                           (exc handler 17 - 18; stack: 0 | exc handler 84 - 97; stack: 0)
 11:2   -  11:7   >>   98 LOAD_NAME                         0    (print)
 11:8   -  11:17      100 LOAD_STRING                       5    ('finally')
 11:2   -  11:18      102 CALL_FUNCTION                     1
 11:2   -  11:18      104 POP_TOP
 11:2   -  11:18      105 END_EXC_HANDLER                                                         (exc handler 98 - 105; stack: 1)
 11:2   -  11:7   >>  106 LOAD_NAME                         0    (print)
 11:8   -  11:17      108 LOAD_STRING                       5    ('finally')
 11:2   -  11:18      110 CALL_FUNCTION                     1
 11:2   -  11:18      112 POP_TOP
 12:0   -  12:5       113 LOAD_NAME                         0    (print)
 12:6   -  12:13      115 LOAD_STRING                       6    ('after')
 12:0   -  12:14      117 CALL_FUNCTION                     1
 12:0   -  12:14      119 RETURN_VALUE
