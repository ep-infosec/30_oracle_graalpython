*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_ABC_has___slots__
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_ABC_helper
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_abstractclassmethod_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_abstractmethod_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_abstractmethod_integration
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_abstractproperty_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_abstractstaticmethod_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_all_new_methods_are_called
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_customdescriptors_with_abstractmethod
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_descriptors_with_abstractmethod
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_isinstance_invalidation
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_issubclass_bad_arguments
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_metaclass_abc
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_object_new_with_many_abstractmethods
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_object_new_with_one_abstractmethod
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_register_as_class_deco
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_register_non_class
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_registration_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_registration_builtins
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_registration_edge_cases
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_registration_transitiveness
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_subclasshook
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_tricky_new_works
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_as_decorator
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_del
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_del_implementation
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_implementation
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_layered_implementation
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_multi_inheritance
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_new_abstractmethods
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABC.test_update_non_abc
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestABCWithInitSubclass.test_works_with_init_subclass
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestLegacyAPI.test_abstractclassmethod_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestLegacyAPI.test_abstractproperty_basics
*graalpython.lib-python.3.test.test_abc.test_factory.<locals>.TestLegacyAPI.test_abstractstaticmethod_basics
